Εργαστήριο Λειτουργικά Συστήματα ΙΙ / Άσκηση 2 / 2022-2023.
Ονοματεπώνυμο: Άγγελος Τζώρτζης.
Α.Μ.: ice18390094.

1.
Υπάρχουν 2 κρίσιμα τμήματα κώδικα που απαιτούν προστασία. Είναι η επιλογή
των θέσεων του πίνακα που θα αναζητήσει και ο έλεγχος εάν το τοπικό μέγιστο
είναι μεγαλύτερο απο το ολικό μέγιστο. Προστατέουμε αυτά τα τμήματα κώδικα
καθώς εάν επέμβουν έστω και ένα από τα άλλα threads μπορεί να βγεί λάθος
αποτέλεσμα.

Ενδεικτικά τρεξίματα:
1.
Enter the number of threads to create (0 to exit): 4
Enter the size of the NxN array: 10

Array:
54 15 20 42 90 70 33 17 47 13
29  2 43 92  0 19  1 69 88 89
17 71 79 96 56 38 77 22  5 21
81 59 88  1 53 78 72 39 95 71
52 76 26 48 69 26 19 70 48  7
12 65 30 43 13 86 33 91  8 38
64 89 50 52 90  3 82 14 42 77
86 47 54 12 47 75 38 66 97 38
25  9 56 55  4 69 41 38 60 49
76 76 90 26 80 32 82 14 47 24

Max: 97

2.
Enter the number of threads to create (0 to exit): 5
Enter the size of the NxN array: 25

Array:
98 95 11 90 66 68 80 43 26 31 34 40 21  5 65 95 71 25 83 48 48 60 75 87 59
22 88  2 96  9 38 46  4  1 36 70 21 68 14 48 99  0 40 73 57  6 68 29 83 51
29 32 63  4 71 22 79 59 24 27 68 14 73 25 67  9 95 89 77 61 89 28 14 29  1
71 87 21  0 71 72 82 55 35 38 26  9 17 85 86 96  5  0 69 30 68 30 78  9 59
91 50 88  5 79 41 29 19 63 81 42 87 63 97 75 54 23 84 71 60 70 20 17 23 89
 0 43 72 78  4 31 21 54 19 79 85 61  8  4 76 89 46 63  5 95 38 59 18 75 82
30 97  2 48 72 44 48 15 16 78 71 47 99 25 19 30 11 32 38 67  8 80 66 23 37
61 14 48 32 41 82 62 38 37 62 11 81 10 78 49 40 50 48 92 27 19 22 90 51 13
58 11 93 76 87 82 89  1 30 73 42 64 88 32  1 50 95 34 13 74 83 53 76 84 45
 3  3 20 46  7 33 56 70 78 32 57 60 73 58 42 47 52  6 35 85  8 37 80 42 50
 6 78 56 34 14 53 90 69 73 36 76  6 92 99 84 76 56 96 49 67 38 48 19 97 35
56 57 73 89 51 75 47 81 83 82 95 37 72 65 62 60 93 69  4 92  5 80  1 54 81
68 44 30 39 41 65 48 50 90 89  2 18 36 83  1 70 31 90 94 48 53 54 93 74 58
38 31 90 39 85 72 59 82  2 50 23 19 98 26 62 39 28 80 76 63 81 98 94 24 93
94 77 99 88  3 10 26 86  0 65 72 72 76 54 26 26 29 98 25 55 60 64 35 40 92
99 73 91 45 97 36 92 26 35 80 81 97  6 68 98 23 92 22 99 46  1 25 27 51  2
35 11 19 70  3 63 21 76 54 19 26 42 11 52 30 91 86 27 49 54 25 72 46  0 71
44  1 48 71 52 51  6 15 70 29 18 33  2 46 40 21 24 34 84 29 64 75 15 92 76
69 69 48 15 69 71 59 22 20 82 26 23 41 41 93 70 11 78 24 10 70 46 34  5 82
63 21 58 78 65 86 99 35 35 14 56 58 25 31 78  8 57  1  1 51 46 23 14 77 47
24 47 93 11  4 76 26 78 86  5 43 24 56 78 59 71 87 70 48 18 48  8 27  2  9
78  0 32 45 77 80 21 77 25 32 33 53 59 11 91 16 55 16 72 85 27 95 72 97 44
42 98  4 70 52 14  0 52 98 45 82 30 67 59  8 99 44 61 10 56  5 26 63 73 99
48  0 94 73 50 90 15  0 95 37 52 61 38  4 11 83 86 42 50 97 50  2 42 63 12
50 20 39 13 93 90 13 46 36 38 96 79 54 96 26 91  0 87 29  4 50 65 43 44 15

Max: 99

real    0m3.274s
user    0m0.000s
sys     0m0.035s

Για να μετρήσουμε χρόνους τρέχουμε: time ./όνομα εκτελέσιμου.

n = 2000 -> 4000000 θέσεις στον πίνακα.
1 thread.
real    0m32.772s
user    0m0.519s
sys     0m0.510s

2 threads.
real    0m33.072s
user    0m0.567s
sys     0m0.460s

4 threads.
real    0m33.200s
user    0m0.602s
sys     0m0.442s

8 threads.
real    0m32.484s
user    0m0.581s
sys     0m0.510s

n = 4000 -> 16000000 θέσεις στον πίνακα.
1 thread.
real    1m48.388s
user    0m2.015s
sys     0m1.942s

2 threads.
real    1m53.379s
user    0m2.351s
sys     0m1.894s

4 threads.
real    2m0.967s
user    0m2.591s
sys     0m1.653s

8 threads.
real    1m57.871s
user    0m2.489s
sys     0m1.814s

2.
Τρέξιμο του προγράμματος:
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three> <one> <two> <three> <one> <two> <three>
<one> <two> <three>

Για να λειτουργήσει σωστά το πρόγραμμα με χρήση σημαφόρων δημιουργήσαμε 3
σημαφόρους και 3 συναρτήσεις, 1 για να τυπώνει κάθε λέξη. Αρχικοποιήσαμε
τους σημαφόρους ώστε να τρέξει πρώτα η συνάρτηση για την λέξη "<one>"
στην συνέχεια μειώνουμε την τιμή της "one" καί αυξάνουμε την τιμή της σημαφόρου
για την συνάρτηση με την λέξη "<two>" μειώνουμε μετά την τιμή της και αυξάνουμε
για την λέξη "<three>" και μειώνουμε αυτηνής και αυξάνουμε για την λέξη "<one>"
ξανά και αυτό γίνεται επαναληπτικά.

3.
Τρέξιμο του κώδικα:
Connected to server.

Enter the amount of elements to find the average of (0 to exit): 8
Enter element 1: 2
Enter element 2: 3
Enter element 3: 4
Enter element 4: 5
Enter element 5: 6
Enter element 6: 7
Enter element 7: 8
Enter element 8: 9

Average: 5.500000
Message: Check failed.

Enter the amount of elements to find the average of (0 to exit): 4
Enter element 1: 20
Enter element 2: 32
Enter element 3: 23
Enter element 4: 11

Average: 21.500000
Message: Sequence Ok.

Enter the amount of elements to find the average of (0 to exit): 0
Exiting...

Ο client λειτουργεί επαναληπτικά μέχρι να τον τερματίσει ο χρήστης.
Ο server δέν τερματίζει και στηρίζει πολλούς χρήστες ταυτόχρονα.